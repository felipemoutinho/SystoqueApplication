@model SystoqueApplication.Models.Item

@{
    ViewBag.Title = "Registro de Vendas";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Venda</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.venda.dataVenda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.venda.dataVenda, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.venda.dataVenda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.venda.dataPrevEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.venda.dataPrevEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.venda.dataPrevEntrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.venda.totalVenda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.venda.totalVenda, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.venda.totalVenda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.venda.statusVenda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.venda.statusVenda, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.venda.statusVenda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.venda.vendedor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.venda.vendedor.Matricula, ViewBag.ListaVendedores as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.venda.vendedor.Matricula, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Confirmar Pedido" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@using (Ajax.BeginForm("PesquisarProduto", "Item", new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.InsertAfter, UpdateTargetId = "teste-produto" }))
{

    <h4>Incluir no Pedido</h4>

    <div class="form-inline">
        <div class="form-group">
            <label for="codigoBarras">Código</label>
            @Html.TextBox("Pesquisa", "", new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label for="nomeProduto">Nome Produto</label>
            <input class="form-control" type="text" />
        </div>

        <div class="form-group">
            <label for="qtdeProduto">Quantidade</label>
            <input class="form-control" type="number" min="1" />
        </div>
    </div>
    <br />
    <div class="form-inline">
        <div class="form-group">
            <label for="valorVenda">Valor do Produto</label>
            <input class="form-control" type="text" />
        </div>

        <button type="submit" class="btn btn-default" value="Pesquisar">Incluir Produto</button>
    </div>
}

<div class="table-responsive">
    <h4>Itens do Pedido</h4>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Código Produto</th>
                <th>Nome Produto</th>
                <th>Valor Unitário</th>
                <th>Quantidade</th>
                <th>Sub Total</th>
            </tr>
        </thead>
        <tbody id="teste-produto">
        </tbody>
    </table>
</div>

@{
    Html.RenderAction("PesquisarProduto");
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}